install.packages("mvtnorm")
library("mvtnorm", lib.loc="~/R/win-library/3.1")
cd
cwd
wd
getwd
getwd()
dir = 'C:\Users\aga\Dropbox\MPHIL\VU\MitISEM\MyMit\include\Debug'
dir = 'C:/Users/aga/Dropbox/MPHIL/VU/MitISEM/MyMit/include/Debug'
setwd(dir)
read.table(theta.dat)
read.table('theta.dat')
theta = as.matrix(read.table('theta.dat'))
View(theta)
View(theta)
install.packages("AdMit")
library("AdMit", lib.loc="~/R/win-library/3.1")
help dMit
? dMit
install.packages("MitISEM")
library("MitISEM", lib.loc="~/R/win-library/3.1")
mu = as.matrix(read.table('mu.dat'))
Sigma =  as.matrix(read.table('Sigma.dat'))
p = as.vector(read.table('p.dat')))
df = as.vector(read.table('df.dat')))
p = as.vector(read.table('p.dat'))
df = as.vector(read.table('df.dat'))
View(mu)
View(mu)
is.matrix(mu)
mu[2,2]
mu[1,1]
View(Sigma)
typeof(Sigma)
mu <- read.delim("mu.dat", header = FALSE, sep="\t")
View(mu)
View(mu)
mu = as.matrix(read.table('mu.csv'))
mu <- read.delim("mu.csv", header = FALSE, sep="\t")
View(mu)
View(mu)
mu <- read.delim("mu.csv", header = FALSE, sep="\c")
mu <-  read.csv("mu.csv", header = FALSE)
typeof(mu)
mu <-  unlist(read.csv("mu.csv", header = FALSE) )
mu
mu = as.matrix(read.csv('mu.csv'))
View(mu)
View(mu)
mu = as.matrix(read.csv("mu.csv"))
mu <-  unlist(read.csv("mu.csv", header = FALSE) )
mu <-  read.csv("mu.csv", header = FALSE,  sep="," )
View(mu)
View(mu)
Sigma <-  read.csv("Sigma.csv", header = FALSE,  sep="," )
p <- read.csv("p.csv", header = FALSE,  sep="," )
df <- read.csv("Sigma.csv", header = FALSE,  sep="," )
p
typeof(p)
typeof(mu)
mu = unlist(mu)
typeof(mu)
mu
mu[1]
mu[3]
mu[1,1]
mu = as.matrix(unlist(mu),nrows=2,cols=2,byrow=TRUE)
View(mu)
View(mu)
mu <-  read.csv("mu.csv", header = FALSE,  sep="," )
mu = as.matrix(unlist(mu),nrows=2,ncols=2,byrow=TRUE)
View(mu)
mu <-  read.csv("mu.csv", header = FALSE,  sep="," )
unlist(mu)
as.matrix(unlist(mu),nrows=2,ncols=2,byrow=TRUE)
unlist(mu)
mu
typeof(mu)
mu = matrix(unlist(mu),nrows=2,ncols=2,byrow=TRUE)
mu = as.matrix(unlist(mu),nrow=2,ncol=2,byrow=TRUE)
mu
mu = matrix(unlist(mu),nrow=2,ncol=2,byrow=TRUE)
mu
Sigma <-  read.csv("Sigma.csv", header = FALSE,  sep="," )
p <- read.csv("p.csv", header = FALSE,  sep="," )
df <- read.csv("Sigma.csv", header = FALSE,  sep="," )
Sigma = matrix(unlist(Sigma),nrow=2,ncol=4,byrow=FALsE)
Sigma <-  read.csv("Sigma.csv", header = FALSE,  sep="," )
Sigma
typeof(Sigma)
unlist(Sigma)
df = vector(unlist(df))
p = vector(unlist(p))
df = as.vector(unlist(df))
p = as.vector(unlist(p))
typeof(df)
is.vector(df)
is.vector(p)
mit = list(p=p, mu=mu, Sigma=Sigma, df=df)
isMit(mit)
typeof(mu)
mu <-  read.csv("mu.csv", header = FALSE,  sep="," )
Sigma <-  read.csv("Sigma.csv", header = FALSE,  sep="," )
p <- read.csv("p.csv", header = FALSE,  sep="," )
df <- read.csv("Sigma.csv", header = FALSE,  sep="," )
mu = as.matrix(unlist(mu),nrow=2,ncol=2,byrow=FALSE)
Sigma = as.matrix(unlist(Sigma),nrow=2,ncol=4,byrow=FALSE)
df = as.vector(unlist(df))
p = as.vector(unlist(p))
typeof(mu)
is.matrix(mu)
dim(mu)
mu <-  read.csv("mu.csv", header = FALSE,  sep="," )
mu = matrix(unlist(mu),nrow=2,ncol=2,byrow=FALSE)
mu
is.matrix(mu)
dim(mu)
Sigma <-  read.csv("Sigma.csv", header = FALSE,  sep="," )
Sigma = as.matrix(unlist(Sigma),nrow=2,ncol=4,byrow=FALSE)
is.matrix(Sigma)
dim(Sigma)
Sigma <-  read.csv("Sigma.csv", header = FALSE,  sep="," )
Sigma
unlist(Sigma)
as.matrix(unlist(Sigma),nrow=2,ncol=4,byrow=FALSE)
length(unlist(Sigma))
Sigma <-  read.csv("Sigma.csv", header = FALSE,  sep="," )
Sigma = matrix(unlist(Sigma),nrow=2,ncol=4,byrow=FALSE)
Sigma
is.matrix(Sigma)
dim(Sigma)
p
length(p)
length(df)
df <- read.csv("df.csv", header = FALSE,  sep="," )
df = as.vector(unlist(df))
length(df)
mit = list(p=p, mu=mu, Sigma=Sigma, df=df)
isMit(mit)
d=dmvgt(theta=theta,mit=mit,log=TRUE)
df
mu
H=length(mit$p)
H
k = ncol(mit$mu)
k
size(theta)
dim(theta)
theta <-  read.csv("theta.csv", header = FALSE,  sep="," )
theta <-  read.csv("theta.csv", header = FALSE,  sep="," )
theta = matrix(unlist(theta),nrow=10000,ncol=2,byrow=FALSE)
View(theta)
View(theta)
d=dmvgt(theta=theta,mit=mit,log=TRUE)
view(d)
View(d)
write.csv(d, "d_R.csv",row.names=FALSE)
